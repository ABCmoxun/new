安装python库
查看安装的列表： pip list
项目版本依赖库打包：pip freeze > requirements.txt
整体安装： pip install -r requirements.txt
方法1：
pip install requests
pip install requests --upgrade
安装指定版本包：pip install networkx==1.9.1 
pip install -i url 库名

清华镜像  https://pypi.tuna.tsinghua.edu.cn/simple
豆瓣镜像  https://pypi.douban.com/simple/
阿里镜像  https://mirrors.aliyun.com/pypi/simple/
网易镜像  https://mirrors.163.com/pypi/simple/

ex: pip install -i https://pypi.tuna.tsinghua.edu.cn/simple pychecharts

方法2：下载安装安装包(.whl文件)
网站： 
	https://www.lfd.uci.edu/~gohlke/pythonlibs/ 
	https://pypi.org
pip install  xx.whl

方法3：下载安装包 + 配置PYTHONPATH路径
打开：安装vtk库为例
2、修改当前家目录下的 .bashrc 文件 (只对当前用户有效)
vim   ~/.bashrc  ，在最末尾加入下面的 ，然后激活配置文件 source .bashrc 
3、修改/etc/bashrc 文件 (针对所有用户有效)
vim  /etc/bashrc + 添加内容 +  source /etc/bashrc
ex：export  PATH=$PATH:/tmp/xie


什么是VirtualEnv-虚拟环境
VirtualEnv，是Python的虚拟环境，在做Python应用开发时，如果不想在大的Python环境中安装各种各样的包的话，则可以虚拟出一个Python环境，
可以让虚拟环境专门为某一个应用而存在。允许在虚拟环境中安装各种包不影响大的python环境
2.安装VirtualEnv
sudo pip3 install virtualenv

3.创建和使用虚拟环境
 准备工作
 mkdir my_env
 mkdir testenv
 
 创建虚拟环境
 virtualenv 虚拟环境名称
 virtualenv default
 virtualenv test
 
 创建指定版本的虚拟环境
 virtualenv -p /usr/bin/python3.5 名称
 virtualenv -p /usr/bin/python3.5 py3.5
 virtualenv -p /usr/bin/python2.7 py2.7
 
 启动虚拟环境
 注意：不能在bin的目录下启动虚拟环境
 source bin/activate
 退出虚拟环境
 deactivate

虚拟环境管理工具-VirtualenvWrapper
 第三方的管理工具，能够快速，高效而且方便的管理虚拟环境
 1.安装虚拟环境管理工具
 sudo pip3 install virtualenvwrapper
 2.配置virtualenvwrapper
 在~目录下，有一个终端管理文件 .bashrc
 配置.bashrc，以便在启动终端时，就自动启动虚拟环境管理工具
 修改.bashrc: sudo vim .bashrc
 在.bashrc底部增加以下内容：
 export WORKON_HOME=~/my_env
 将~/my_env 作为虚拟环境的管理目录，所有使用virtualenvwrapper创建的虚拟环境都默认保存于此
 如果系统中包含多个python执行环境的话，则添加以下内容
 export VIRTUALENVWRAPPER_PYTHON=/usr/bin/python3
 source /usr/local/bin/virtualenvwrapper.sh
 在~目录下，执行一遍  source .bashrc


使用虚拟环境管理工具
1.创建并进入到虚拟环境中
  mkvirtualenv 虚拟环境名称
  mkvirtualenv --python=/usr/bin/python3 虚拟环境名称
  mkvirtualenv --python=/usr/bin/python3 py3.5
  
  查看当前所维护的所有虚拟环境
  workon
  切换虚拟环境
  workon 虚拟环境名称
  退出虚拟环境
  deactivate
  删除虚拟环境
  rmvirtualenv 虚拟环境名称


pipenv安装 ： sudo pip3 install pipenv
用法：pipenv [选项]命令[ARGS] ...
选项：
  --venv 	输出virtualenv信息。
  --py  	输出Python解释器信息。
  --envs	输出环境变量选项。
  --rm		删除virtualenv。
  --bare	最小输出。
  --completion	输出完成（待评估）。
  --man			显示联机帮助页。
  --three / --two	在创建virtualenv时使用Python 3/2。
  --python 	TEXT指定哪个版本的Python virtualenv应该使用。
  --site-packages	为virtualenv启用站点包。
  --version	显示版本并退出。
  -h， - help	显示此消息并退出。
为项目(在特定文件夹下)绑定虚拟环境
pipenv install
使用Python 3.6创建一个新项目，具体如下：
 pipenv --python 3.6

将入虚拟环境和启动虚拟环境
	pipenv shell
退出虚拟环境 exit 或“Ctrl + D”

安装卸载软件
pipenv install xx	;  pipenv uninstall xx
ex: pipenv install flask
卸载一切： pipenv uninstall --all

查看安装包的依赖关系???
pipenv graph

安装所有dev依赖项：
pipenv install --dev

检查已安装的依赖项是否存在安全漏洞：
 pipenv check
